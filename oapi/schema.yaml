openapi: "3.0.0"
info:
  version: 1.0.0
  title: PMSS Swagger
  description: TBD
  termsOfService: TBD
  # contact:
  #   name: Swagger API Team
  #   email: apiteam@swagger.io
  #   url: http://swagger.io
  # license:
  #   name: Apache 2.0
  #   url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://pmss.ls.rtfm.so/api/v1
paths:
  /hash:
    post:
      description: Query by hash (batch)
      operationId: queryByHashBatch
      requestBody:
        description: Hashes to query
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/HashQuery'

      responses:
        '200':
          description: Respons with report id
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KnownFile'

        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /hash/{hash}:
    get:
      description: Query by hash
      operationId: queryByHash
      parameters:
        - name: hash
          in: path
          description: Hash to query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Respons with report id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnownFile'
        '404':
          description: File not found
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /report:
    post:
      description: Submits report to PMSS
      operationId: submitReport
      requestBody:
        description: Scan report from the machine
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewReportRequest'
      responses:
        '201':
          description: Respons with report id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewReportResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic

    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:

    HashQuery:
      type: object
      required:
        - hash
        - path
      properties:
        hash:
          type: string
        path:
          type: string

    NewReportRequest:
      type: object
      required:
        - hostname
        - machineId
        - files
      properties:
        hostname:
          type: string
        machineId:
          type: string
        files:
          type: array
          items:
            $ref: '#/components/schemas/File'
        reportRunId:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/google/uuid


    File:
      type: object
      required:
        - path
        - size
        - fileMode
        - mtime
      properties:
        path:
          type: string
        md5:
          type: string
        sha1:
          type: string
        sha256:
          type: string
        size:
          type: integer
          format: int64
        fileMode:
          type: integer
          format: uint32
        mtime:
          type: integer
          format: int64
        ctime:
          type: integer
          format: int64
        owner:
          type: integer
          format: uint32
        group:
          type: integer
          format: uint32

    NewReportResponse:
      type: object
      required:
        - id
        - files
      properties:
        id:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/google/uuid
        files:
          type: array
          items:
            $ref: '#/components/schemas/ReportFile'

    ReportFile:
      type: object
      required:
        - path
        - status
      properties:
        path:
          type: string
        status:
          type: integer
          x-go-type: datastore.FileStatus
          x-go-type-import:
            path: github.com/overlordtm/pmss/pkg/datastore
        error:
          type: string

    KnownFile:
      type: object
      properties:
        status:
          type: integer
          x-go-type: datastore.FileStatus
          x-go-type-import:
            path: github.com/overlordtm/pmss/pkg/datastore
        path:
          type: string
        md5:
          type: string
        sha1:
          type: string
        sha256:
          type: string
        size:
          type: integer
          format: int64

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string


  